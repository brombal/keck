var e=require("react");function t(e,t,r,s){Object.defineProperty(e,t,{get:r,set:s,enumerable:!0,configurable:!0})}var r={};t(r,"observe",(()=>u)),t(r,"unwrap",(()=>p)),t(r,"observableFactories",(()=>a)),t(r,"configure",(()=>y)),t(r,"select",(()=>h)),t(r,"reset",(()=>g)),t(r,"ref",(()=>o)),t(r,"objectAndArrayObservableFactory",(()=>m)),t(r,"useObserver",(()=>z)),t(r,"useObserveSelector",(()=>E));const s=Symbol("ref");function o(e){return a.get(e.constructor)?(e[s]=!0,e):e}const i=Symbol("root"),n=new WeakMap,a=new Map,c=new WeakMap;function l(e,t,r){const s=a.get(t.constructor);if(!s)return;let o=r?r.children.get(e):c.get(t);return o?(o.value=t,o):(o={identifier:e,value:t,children:new Map,parent:r,factory:s,observersForChild:new Map,validContexts:new WeakSet},r&&r.children.set(e,o),c.set(t,o),o)}function f(e,t,r){let s=t.observersForChild.get(e);s||t.observersForChild.set(e,s=new Map);let o=s.get(r);const i=o&&0===o.size;o||s.set(r,o=new Set),v?i||o.add(v):o.clear(),r.disposers.add((()=>s.delete(r)))}function d(e,t){let r=e.contextForNode.get(t);return r&&!t.validContexts.has(r)&&(r=void 0,e.contextForNode.delete(t)),r||(r={root:!1,dataNode:t,observer:e,observable:null,get value(){return this.dataNode.value},observeIdentifier(r,o,i=!1){if("function"==typeof o)return o.bind(this.observable);const n=o&&(a=o,!a?.[s])&&l(r,o,t);var a;return n?(e.config.observe&&(v||e.config.intermediates||i)&&f(r,t,e),d(e,n).observable):(e.config.observe&&f(r,t,e),o)},modifyIdentifier(r,s){e.config.clone&&t.parent&&(t.value=t.factory.createClone(t.value)),!e.config.clone&&s||!t.children.get(r)||(t.children.get(r).validContexts=new Set),s||t.children.get(r)?.children.clear(),t.observersForChild.get(r)?.forEach(((e,o)=>{let i;if(e.size){i=!1;for(const t of e){v=t;const e=t.selectorFn();i=i||!(t.isEqual||Object.is)(e,t.lastValue),t.lastValue=e,v=void 0}}!o.config.enabled||!0!==i&&void 0!==i||o.callback?.(s?.[0].value||t.value,s?.[1]||r)})),t.parent?.factory.handleChange(t.parent.value,t.identifier,t.value),r!==i&&d(e,t.parent||t)?.modifyIdentifier(t.identifier,s||[t,r])}},r.observable=t.factory.makeObservable(r),e.contextForNode.set(t,r),n.set(r.observable,r),t.validContexts.add(r),r)}function u(...e){return 2===e.length?function(e,t){const r=n.get(e)?.dataNode||l(i,e);if(!r)throw new Error(`Cannot observe value ${e}`);const s=d({callback:t,disposers:new Set,contextForNode:new WeakMap,config:b()},r);return s.root=!0,s.observable}(e[0],e[1]):function(e,t,r,s=Object.is){const o=u(e,((e,s)=>r(t(o),e,s)));return h((()=>t(o)),s),y(o,{observe:!1}),o}(e[0],e[1],e[2])}let v;function h(e,t){if(v)return e();v={selectorFn:e,isEqual:t};const r=v.lastValue=e();return v=void 0,r}const b=()=>({observe:!0,clone:!1,intermediates:!1,enabled:!0});function y(e,t){const r=n.get(e);if(!r?.root)throw new Error(`Cannot configure non-observable ${e}`);Object.assign(r.observer.config,t)}function g(e){const t=n.get(e);if(!t?.root)throw new Error(`Cannot reset non-observable ${e}`);Object.assign(t.observer.config,b()),t.observer.disposers.forEach((e=>e())),t.observer.disposers.clear()}function p(e,t=!0){const r=n.get(e);return r?(t&&r.observer.config.observe&&d(r.observer,r.dataNode.parent||r.dataNode)?.observeIdentifier(r.dataNode.identifier,r.value,!0),r.dataNode.value):e}const m={makeObservable:e=>new Proxy(e.value,{getPrototypeOf:()=>Reflect.getPrototypeOf(e.value),getOwnPropertyDescriptor:(t,r)=>(e.observeIdentifier(r),Reflect.getOwnPropertyDescriptor(e.value,r)),ownKeys:()=>Reflect.ownKeys(e.value),has:(t,r)=>(e.observeIdentifier(r),Reflect.has(e.value,r)),get(t,r){if("toJSON"===r)return()=>e.value;const s=Reflect.get(e.value,r,e.value);return e.observeIdentifier(r,s)},set(t,r,s){const o=p(s,!1);if(Reflect.get(e.value,r,e.value)===o)return!0;if(Array.isArray(e.value)){const t=e.value.length,s=Reflect.set(e.value,r,o,e.value);return t!==e.value.length&&e.modifyIdentifier("length"),"length"!==r&&e.modifyIdentifier(r),s}const i=Reflect.set(e.value,r,o,e.value);return e.modifyIdentifier(r),i},deleteProperty(t,r){const s=Reflect.deleteProperty(e.value,r);return s&&e.modifyIdentifier(r),s}}),handleChange(e,t,r){e[t]=r},createClone(e){if(Array.isArray(e))return[...e];const t={...e};return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),t}};a.set(Object,m),a.set(Array,m);const I=Symbol("size");class w extends Set{constructor(e){super(),this.ctx=e}get set(){return this.ctx.value}add(e){const t=this.set.size;return this.set.add(e),t!==this.set.size&&this.ctx.modifyIdentifier(I),this}clear(){const e=this.set.size;this.set.clear(),e!==this.set.size&&this.ctx.modifyIdentifier(I)}delete(e){const t=this.set.delete(e);return t&&this.ctx.modifyIdentifier(I),t}forEach(e,t){this.set.forEach(((r,s)=>{const o=this.ctx.observeIdentifier(r,r);e.call(t,o,o,this)}),t),this.size}has(e){return this.ctx.observeIdentifier(I),this.set.has(e)}get size(){return this.ctx.observeIdentifier(I,this.set.size)}*[Symbol.iterator](){this.ctx.observeIdentifier(I);for(const e of this.set)yield this.ctx.observeIdentifier(e,e)}*entries(){for(const e of this[Symbol.iterator]())yield[e,e]}keys(){return this[Symbol.iterator]()}values(){return this[Symbol.iterator]()}}a.set(Set,{makeObservable:e=>new w(e),handleChange(e,t,r){e.delete(t),e.add(r)},createClone:e=>new Set(e)});const O=Symbol("size");class S extends Map{constructor(e){super(),this.ctx=e}get map(){return this.ctx.value}clear(){const e=this.map.size;this.map.clear(),e!==this.map.size&&this.ctx.modifyIdentifier(O)}delete(e){const t=this.map.delete(e);return t&&(this.ctx.modifyIdentifier(e),this.ctx.modifyIdentifier(O)),t}forEach(e,t){this.map.forEach(((r,s)=>{const o=this.ctx.observeIdentifier(s,r);e.call(t,o,s,this)}),t),this.size}get(e){return this.ctx.observeIdentifier(e),this.map.get(e)}has(e){return this.ctx.observeIdentifier(e),this.map.has(e)}set(e,t){const r=this.map.size;return this.map.set(e,t),r!==this.map.size&&(this.ctx.modifyIdentifier(e),this.ctx.modifyIdentifier(O)),this}get size(){return this.ctx.observeIdentifier(O,this.ctx.value.size)}*[Symbol.iterator](){this.ctx.observeIdentifier(O);for(const[e,t]of this.map){const r=this.ctx.observeIdentifier(e,t);yield[e,r]}}entries(){return this[Symbol.iterator]()}keys(){return this.ctx.observeIdentifier(O),this.map.keys()}*values(){for(const[e,t]of this[Symbol.iterator]())yield t}}a.set(Map,{makeObservable:e=>new S(e),handleChange(e,t,r){e.delete(t),e.set(t,r)},createClone:e=>new Map(e)});var C={};function z(t){const[,r]=(0,e.useState)({}),s=(0,e.useMemo)((()=>u(t,(()=>r({})))),[]);return g(s),y(s,{clone:!0}),(0,e.useEffect)((()=>{y(s,{observe:!1})})),(0,e.useEffect)((()=>()=>{g(s),y(s,{enabled:!1})}),[s]),s}function E(t,r,s){const[,o]=(0,e.useState)({}),i=(0,e.useRef)(),n=(0,e.useRef)(u(t,(e=>i.current=r(e)),(e=>{s?.(e),o({})}))).current;return(0,e.useEffect)((()=>()=>g(n)),[]),[i.current,n]}t(C,"useObserver",(()=>z)),t(C,"useObserveSelector",(()=>E)),x(r),x(C);